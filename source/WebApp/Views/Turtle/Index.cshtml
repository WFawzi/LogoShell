@{
    ViewBag.Title = "Index";
}



<style>
    #canvasWrapper,  #codeEditor{
        width: 100%;
        min-width: 500px;
        max-height: 700px;
    }
    canvas {
        border:1px solid #000000;
    }
    #controls {
        margin: 10px 0 10px 0;
    }
    #selectColour {
        width:auto;
    }
</style>

<h2>Turtle!</h2>
<div id="voiceCommandsWrapper"> <!--Need to modify the tool tip to look more fancy-->
    <input id="buttonTalkToMe" type="button" class="btn btn-primary" value="Talk to me!" onclick="VoiceCommand()" data-toggle="tooltip" data-placement="right" title='Say: "Move Forward + step", "Turn + angle", "Clear script", "Draw", "Clear" and "Brush + colour"'/>
</div>

<div id="canvasWrapper">
    <canvas id="logoCanvas"></canvas>
</div>
<div id="controls" class="inline-form">
    <input id="buttonDraw" type="button" class="btn btn-success" value="Draw!" onclick ="SendScript()"/>
    <input id="buttonClear" type="button" class="btn btn-danger" value="Clear" onClick ="ClearCanvas()"/>
    <div class="form-group">
        <select id ="selectColour" class="form-control" onchange="ChangeBrushColor()">
            <option value="black">Black</option>
            <option value="blue">Blue</option>
            <option value="green">Green</option>
        </select>
    </div>
</div>
<div>
    <textarea id="codeEditor" rows="20">
#You can access the cursor using $turtle.
#Move the cursor forward by pixels with $turtle.MoveForward(pixelCount)
#Turn the cursor by degress with $turtle.Turn(degrees)

$i = 0;

while($i -lt 4) {
    $turtle.MoveForward(100);
    $turtle.Turn(90);
    $i = $i + 1;
}
    </textarea>
</div>

@section scripts {
        @Scripts.Render("~/bundles/turtleengine")
}
